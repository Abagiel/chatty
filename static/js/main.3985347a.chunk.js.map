{"version":3,"sources":["components/toggler/Toggler.js","base/constants.js","base/utils.js","base/reducer/actions.js","base/reducer/types.js","components/backdrop/Backdrop.js","components/modal/Modal.js","components/create-chat-modal/CreateChatModal.js","components/header/TrueLogin.js","components/register-modal/RegisterModal.js","components/login-modal/LoginModal.js","components/header/FalseLogin.js","components/header/Header.js","components/side-menu/Chat.js","components/side-menu/Chats.js","components/side-menu/SideMenu.js","components/main-area/MessageInput.js","components/main-area/MessageItem.js","components/main-area/MessageBoard.js","components/main-area/MainWall.js","components/main-area/MainArea.js","components/notificator/Notificator.js","components/App.js","components/error-message/ErrorMessage.js","components/error-boundary/ErrorBoundary.js","base/clients/storage.js","base/reducer/initialState.js","base/store.js","base/reducer/reducer.js","index.js","base/clients/LocalStorageClient.js"],"names":["Toggler","Fragment","className","type","id","name","htmlFor","timeOptions","year","month","day","hour","minute","svgs","exit","xmlns","height","viewBox","width","d","fill","create","opacity","conversationImage","fillRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","clear","arrowRight","login","enableBackground","delete","sad","preventDefault","e","capitalize","text","slice","toUpperCase","toCamelName","str","s","includes","split","length","reduce","init","next","sendText","data","date","Date","toLocaleString","region","timestamp","now","changeRoom","register","time","logout","createRoom","deleteRoom","deleteNotify","addNotify","Backdrop","props","onClick","setView","Modal","keydownHandler","key","target","tagName","nextSibling","focus","submitHandlerRegister","inputsValuesToObject","onRegister","submitHandlerLogin","onLogin","submitHandlerCreate","value","password","onCreateRoom","title","inputs","svg","btnText","this","toLowerCase","handler","onKeyDown","onSubmit","map","input","Input","placeholder","Component","max","autoFocus","data-input","maxLength","obj","Array","from","querySelectorAll","forEach","i","dataset","connect","state","dispatch","bindActionCreators","CreateChatModal","createHeaderUserBtn","func","btnContent","arg","currentUser","rooms","onLogout","onDeleteRoom","onChangeRoom","useState","isModal","setModal","modal","Object","values","room","email","owner","createChatListItem","createChatsList","RegisterModal","LoginModal","FalseLogin","createHeaderBtn","content","selectedRoom","onAddNotify","data-room","closest","private","notify","querySelector","document","createElement","setAttribute","onblur","remove","onchange","ev","append","createPassInput","chatClickHandler","createChat","priv","ownerIsSite","getRooms","SideMenu","MessageInput","inputHandler","setState","formSubmitHandler","message","user","sessionId","onSendText","clearText","focusText","textInput","React","createRef","ref","onChange","scrollToEnd","scrollTo","scrollHeight","current","info","clas","getClass","mapMessages","messages","renderMessages","MainWall","createMessage","notificator","onDeleteNotify","setTimeout","App","ErrorMessage","ErrorBoundary","isError","children","storage","JSON","parse","localStorage","getItem","setItem","stringify","currentUserDefault","roomDefault","defaultState","store","createStore","action","sendTextReducer","usersArr","keys","users","registerReducer","loginReducer","logoutReducer","Boolean","createRoomReducer","newState","deleteRoomReducer","changeRoomReducer","newNotiMessages","filter","deleteNotificatorReducer","addNotificatorReducer","normalize","lcc","save","get","subscribe","getState","ReactDom","render"],"mappings":"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","file":"static/js/main.3985347a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './toggler.css';\r\n\r\nexport function Toggler() {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t<input className='header-toggler' type=\"checkbox\" id=\"toggler\" name=\"toggler\" />\r\n\t\t<label htmlFor=\"toggler\">\r\n\t\t\t<span></span>\r\n\t\t\t<span></span>\r\n\t\t\t<span></span>\r\n\t\t</label>\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import React from 'react';\r\n\r\nexport const timeTillRemove = 5000;\r\n\r\nexport const timeOptions = {\r\n\t\tyear: 'numeric',\r\n\t\tmonth: 'numeric',\r\n\t\tday: 'numeric',\r\n\t\thour: 'numeric',\r\n\t\tminute: 'numeric'\r\n};\r\n\r\nexport const svgs = {\r\n\texit: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/></svg>,\r\n\r\n\tcreate: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"/></svg>,\r\n\r\n\t'open room': <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"hsl(140 80% 50%)\" width=\"18px\" height=\"18px\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h2c0-1.66 1.34-3 3-3s3 1.34 3 3v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/></svg>,\r\n\r\n\t'private room': <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"hsl(60 80% 50%)\" width=\"18px\" height=\"18px\"><g fill=\"none\"><path d=\"M0 0h24v24H0V0z\"/><path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/></g><path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/></svg>,\r\n\r\n\tconversationImage: <svg height=\"512\" viewBox=\"0 0 58 57\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"Page-1\" fill=\"none\" fillRule=\"evenodd\"><g id=\"046---Tying-Chats\"><path id=\"Shape\" d=\"m40 21h14c2.209139 0 4 1.790861 4 4v20c0 2.209139-1.790861 4-4 4h-3l.69 6.17c.0479682.4247282-.1793133.8329868-.5655965 1.015963-.3862831.1829763-.8461548.1002113-1.1444035-.205963l-6.98-6.98h-21c-2.209139 0-4-1.790861-4-4v-17z\" fill=\"#3b97d3\" fillRule=\"nonzero\"/><path id=\"Shape\" d=\"m8 4h-4v4\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"/><g fillRule=\"nonzero\"><path id=\"Shape\" d=\"m40 4v20c0 2.209139-1.790861 4-4 4h-21l-6.98 6.98c-.29824873.3061743-.75812038.3889393-1.14440355.205963-.38628317-.1829762-.61356468-.5912348-.56559645-1.015963l.69-6.17h-3c-2.209139 0-4-1.790861-4-4v-20c0-2.209139 1.790861-4 4-4h32c2.209139 0 4 1.790861 4 4z\" fill=\"#ff5364\"/><path id=\"Shape\" d=\"m54 46h-4c-.5522847 0-1-.4477153-1-1s.4477153-1 1-1h3v-3c0-.5522847.4477153-1 1-1s1 .4477153 1 1v4c0 .5522847-.4477153 1-1 1z\" fill=\"#fff\"/><circle id=\"Oval\" cx=\"9\" cy=\"14\" fill=\"#fff\" r=\"3\"/><circle id=\"Oval\" cx=\"31\" cy=\"14\" fill=\"#fff\" r=\"3\"/><circle id=\"Oval\" cx=\"20\" cy=\"14\" fill=\"#fff\" r=\"3\"/><circle id=\"Oval\" cx=\"27\" cy=\"35\" fill=\"#fff\" r=\"3\"/><circle id=\"Oval\" cx=\"49\" cy=\"35\" fill=\"#fff\" r=\"3\"/><circle id=\"Oval\" cx=\"38\" cy=\"35\" fill=\"#fff\" r=\"3\"/></g></g></g></svg>,\r\n\r\n\tclear: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/></svg>,\r\n\r\n\tarrowRight: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\"/></svg>,\r\n\r\n\tlogin: <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M11,7L9.6,8.4l2.6,2.6H2v2h10.2l-2.6,2.6L11,17l5-5L11,7z M20,19h-8v2h8c1.1,0,2-0.9,2-2V5c0-1.1-0.9-2-2-2h-8v2h8V19z\"/></g></svg>,\r\n\r\n\tdelete: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\"/></svg>,\r\n\r\n\tsad: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><circle cx=\"15.5\" cy=\"9.5\" r=\"1.5\"/><circle cx=\"8.5\" cy=\"9.5\" r=\"1.5\"/><path d=\"M12 14c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5zm-.01-12C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/></svg>,\r\n}","import { timeOptions } from './constants';\r\n\r\nexport function preventDefault(e) {\r\n\te.preventDefault();\r\n}\r\n\r\nexport function capitalize(text) {\r\n\treturn text.slice(0, 1).toUpperCase() + text.slice(1);\r\n}\r\n\r\nexport function toCamelName(str) {\r\n\tconst s = str.includes(' ') \r\n\t\t? str.split(' ')\r\n\t\t: [];\r\n\r\n\tlet r = '';\r\n\r\n\tif (s.length <= 1) return capitalize(str);\r\n\r\n\ts.reduce((init, next) => {\r\n\t\treturn r += capitalize(next);\r\n\t}, r)\r\n\r\n\treturn r;\r\n}\r\n\r\nexport function getTime(region) {\r\n\tconst date = new Date();\r\n\treturn date.toLocaleString(region, timeOptions);\r\n}","import { \r\n\tSEND_TEXT, \r\n\tCHANGE_ROOM, \r\n\tREGISTER,\r\n\tLOGIN,\r\n\tLOGOUT,\r\n\tCREATE_ROOM,\r\n\tDELETE_ROOM,\r\n\tDELETE_NOTIFICATOR,\r\n\tADD_NOTIFICATOR } from './types';\r\n\r\nimport { getTime } from '../utils';\r\n\r\nexport function sendText(data) {\r\n\treturn {\r\n\t\ttype: SEND_TEXT,\r\n\t\tdata: {\r\n\t\t\t...data,\r\n\t\t\tdate: getTime(),\r\n\t\t\ttimestamp: Date.now()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function changeRoom(data) {\r\n\treturn {\r\n\t\ttype: CHANGE_ROOM,\r\n\t\tdata\r\n\t}\r\n}\r\n\r\nexport function register(data) {\r\n\treturn {\r\n\t\ttype: REGISTER,\r\n\t\tdata: {\r\n\t\t\t...data,\r\n\t\t\ttime: Date.now()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function login(data) {\r\n\treturn {\r\n\t\ttype: LOGIN,\r\n\t\tdata: {\r\n\t\t\t...data,\r\n\t\t\ttime: Date.now()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function logout(data) {\r\n\treturn {\r\n\t\ttype: LOGOUT,\r\n\t\tdata: {\r\n\t\t\t...data,\r\n\t\t\ttime: Date.now()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function createRoom(data) {\r\n\treturn {\r\n\t\ttype: CREATE_ROOM,\r\n\t\tdata: {\r\n\t\t\t...data,\r\n\t\t\ttime: Date.now()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function deleteRoom(data) {\r\n\treturn {\r\n\t\ttype: DELETE_ROOM,\r\n\t\tdata,\r\n\t\ttime: Date.now()\r\n\t}\r\n}\r\n\r\nexport function deleteNotify(data) {\r\n\treturn {\r\n\t\ttype: DELETE_NOTIFICATOR,\r\n\t\tdata\r\n\t}\r\n}\r\n\r\nexport function addNotify(data) {\r\n\treturn {\r\n\t\ttype: ADD_NOTIFICATOR,\r\n\t\tdata: {\r\n\t\t\t...data,\r\n\t\t\ttime: Date.now()\r\n\t\t}\r\n\t}\r\n}","export const SEND_TEXT = 'SEND_TEXT';\r\nexport const CHANGE_ROOM = 'CHANGE_ROOM';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CREATE_ROOM = 'CREATE_ROOM';\r\nexport const DELETE_ROOM = 'DELETE_ROOM';\r\nexport const DELETE_NOTIFICATOR = 'DELETE_NOTIFICATOR';\r\nexport const ADD_NOTIFICATOR = 'ADD_NOTIFICATOR';\r\n","import React from 'react';\r\n\r\nexport function Backdrop(props) {\r\n\treturn <div \r\n\t\tonClick={() => props.setView(false)} \r\n\t\tclassName=\"backdrop\"></div>\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { register, login, createRoom } from '../../base/reducer/actions';\r\nimport { Backdrop } from '../backdrop/Backdrop';\r\nimport { preventDefault, toCamelName } from '../../base/utils';\r\n\r\nimport { svgs } from '../../base/constants';\r\n\r\n\r\nimport './modal.css';\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.title = props.title;\r\n    this.inputs = props.inputs;\r\n    this.svg = props.svg;\r\n    this.btnText = props.btnText;\r\n    this.setView = props.setView;\r\n    this.onRegister = props.onRegister;\r\n    this.onLogin = props.onLogin;\r\n    this.onCreateRoom = props.onCreateRoom;\r\n  }\r\n\r\n  render() {\r\n    const title = this.title.toLowerCase();\r\n    const handler = title.includes('register')\r\n      ? this.submitHandlerRegister\r\n      : title.includes('create')\r\n      ? this.submitHandlerCreate\r\n      : this.submitHandlerLogin\r\n\r\n    return (\r\n    \t<React.Fragment>\r\n    \t\t<Backdrop setView={this.setView} />\r\n      \t<div className=\"modal\">\r\n\t\t\t\t\t<h2>{this.title}</h2>\r\n\t\t\t\t\t<form\r\n            onKeyDown={this.keydownHandler} \r\n            onSubmit={handler} \r\n            className=\"modal-form\">\r\n\t\t\t\t\t\t{this.inputs.map(input => <Input {...input} key={input.type+input.placeholder} />)}\r\n\r\n\t\t\t\t\t\t<button className=\"modal-btn\">{this.btnText} {this.svg}</button>\r\n            <div onClick={() => this.setView(false)} className=\"modal-close\">{svgs.clear}</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n    )\r\n  }\r\n\r\n  keydownHandler = (e) => {\r\n    if (e.key === 'Enter' && \r\n        e.target.tagName !== 'BUTTON') {\r\n      e.preventDefault();\r\n      e.target.nextSibling.focus();\r\n    }\r\n  }\r\n\r\n  submitHandlerRegister = (e) => {\r\n    preventDefault(e);\r\n\r\n    this.setView(false);\r\n    let data = inputsValuesToObject(e.target);\r\n    \r\n    this.onRegister(data);\r\n  }\r\n\r\n  submitHandlerLogin = (e) => {\r\n    preventDefault(e);\r\n    this.setView(false);\r\n    let data = inputsValuesToObject(e.target);\r\n\r\n    this.onLogin(data);\r\n  }\r\n\r\n  submitHandlerCreate = (e) => {\r\n    preventDefault(e);\r\n    this.setView(false);\r\n    let data = inputsValuesToObject(e.target);\r\n    const value = data.name;\r\n    const key = toCamelName(value);\r\n    const password = data.password;\r\n\r\n    this.onCreateRoom({key, value, password});\r\n  }\r\n}\r\n\r\nfunction Input({type, placeholder, name, max = 100, focus = false}) {\r\n  return <input \r\n            autoFocus={focus}\r\n            className=\"modal-input\" \r\n            type={type} \r\n            placeholder={placeholder}\r\n            data-input={name}\r\n            maxLength={max} \r\n         />\r\n}\r\n\r\nfunction inputsValuesToObject(target) {\r\n  let obj = {};\r\n\r\n  Array.from(\r\n    target\r\n      .querySelectorAll('input'))\r\n      .forEach(i => {\r\n        obj[i.dataset.input] = i.value;\r\n      }\r\n  )\r\n\r\n  return obj;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n    onRegister: register,\r\n    onLogin: login,\r\n    onCreateRoom: createRoom\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);","import React from 'react';\r\n\r\nimport Modal from '../modal/Modal';\r\n\r\nimport { svgs } from '../../base/constants';\r\n\r\nconst inputs = [\r\n\t{type: 'text', placeholder: 'name', name: 'name', max: 15, focus: true},\r\n\t{type: 'password', placeholder: 'password', name:'password'}\r\n];\r\n\r\nexport function CreateChatModal(props) {\r\n  return (\r\n    <Modal \r\n\t\t\t\ttitle=\"Create Room\"\r\n\t\t\t\tbtnText=\"Create\"\r\n\t\t\t\tsvg={svgs.create}\r\n\t\t\t\tinputs={inputs}\r\n\t\t\t\tsetView={props.setView}\r\n\t\t/>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { logout, deleteRoom, changeRoom } from '../../base/reducer/actions';\r\n\r\nimport { CreateChatModal } from '../create-chat-modal/CreateChatModal';\r\n\r\nimport { toCamelName } from '../../base/utils'\r\nimport { svgs } from '../../base/constants';\r\n\r\nfunction TrueLogin(props) {\r\n\tconst [isModal, setModal] = useState(false);\r\n\r\n\tconst modal = isModal\r\n\t\t? <CreateChatModal setView={setModal}/> \r\n\t\t: null;\r\n\r\n\treturn (\r\n\t\t<div className=\"header-user\">\r\n\t\t\t{modal}\r\n\t\t\t{props.currentUser.name[0]}\r\n\t\t\t<div className=\"header-user__menu\">\r\n\t\t\t\t<h4 className=\"border-b\">{props.currentUser.name}</h4>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button className=\"header-user__btn\">My chats</button>\r\n\t\t\t\t\t{svgs.arrowRight}\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{createChatsList(props)}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{createHeaderUserBtn(setModal, 'Create chat', true)}\r\n\t\t\t\t\t{svgs.create}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{createHeaderUserBtn(props.onLogout, 'Log Out')}\r\n\t\t\t\t\t{svgs.exit}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction createChatsList(props) {\r\n\treturn Object\r\n\t\t\t\t .values(props.rooms)\r\n\t\t\t\t .map(room => createChatListItem(room, props));\r\n}\r\n\r\nfunction createChatListItem(room, props) {\r\n\tif (props.currentUser.email === room.owner) {\r\n\t\tconst name = toCamelName(room.name);\r\n\t\treturn (\r\n\t\t\t<li key={room.name}>\r\n\t\t\t\t<span \r\n\t\t\t\t\tonClick={() => props.onChangeRoom(name)}>\r\n\t\t\t\t\t{room.name}\r\n\t\t\t\t</span>\r\n\t\t\t\t{createHeaderUserBtn(props.onDeleteRoom, svgs.delete, name)}\r\n\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn null;\r\n}\r\n\r\nfunction createHeaderUserBtn(func, btnContent, arg = null) {\r\n\treturn <button \r\n\t\t\t\t   onClick={() => func(arg)} \r\n\t\t\t\t   className=\"header-user__btn\">\r\n\t\t\t\t   {btnContent}\r\n\t\t\t\t </button>\r\n}\r\n\r\nfunction mapStateToProps({currentUser, rooms}) {\r\n\treturn {currentUser, rooms};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({\r\n\t\tonLogout: logout,\r\n\t\tonDeleteRoom: deleteRoom,\r\n\t\tonChangeRoom: changeRoom\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrueLogin);","import React from 'react';\r\n\r\nimport Modal from '../modal/Modal';\r\n\r\nimport { svgs } from '../../base/constants';\r\n\r\nconst inputs = [\r\n  { type: 'text', placeholder: 'name', name: 'name', focus: true },\r\n  { type: 'password', placeholder: 'password', name: 'password' },\r\n  { type: 'email', placeholder: 'email', name: 'email' }\r\n];\r\n\r\nexport function RegisterModal(props) {\r\n  return (\r\n    <Modal \r\n\t\t\t\ttitle=\"Register\"\r\n\t\t\t\tbtnText=\"Register\"\r\n\t\t\t\tsvg={svgs.arrowRight}\r\n\t\t\t\tinputs={inputs}\r\n\t\t\t\tsetView={props.setView}\r\n\t\t/>\r\n  )\r\n}","import React from 'react';\r\n\r\nimport Modal from '../modal/Modal';\r\n\r\nimport { svgs } from '../../base/constants';\r\n\r\nconst inputs = [\r\n  { type: 'email', placeholder: 'email', name: 'email', focus: true },\r\n  { type: 'password', placeholder: 'password', name: 'password' }\r\n];\r\n\r\nexport function LoginModal(props) {\r\n  return (\r\n    <Modal \r\n\t\t\ttitle=\"Log In\"\r\n\t\t\tbtnText=\"Log In\"\r\n\t\t\tsvg={svgs.login}\r\n\t\t\tinputs={inputs}\r\n\t\t\tsetView={props.setView}\r\n\t\t/>\r\n  )\r\n}","import React, { useState } from 'react';\r\n\r\nimport { RegisterModal } from '../register-modal/RegisterModal';\r\nimport { LoginModal } from '../login-modal/LoginModal';\r\n\r\nexport function FalseLogin() {\r\n\tconst [isModal, setModal] = useState(false);\r\n\r\n\tconst modal = isModal === 'reg' \r\n\t\t? <RegisterModal setView={setModal}/> \r\n\t\t: isModal === 'log'\r\n\t\t? <LoginModal setView={setModal} />\r\n\t\t: null;\r\n\r\n\treturn (\r\n\t\t<div className=\"header-btn__container\">\r\n\t\t\t{modal}\r\n\t\t\t{createHeaderBtn('Login', setModal, 'log')}\r\n\t\t\t{createHeaderBtn('Register', setModal, 'reg')}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction createHeaderBtn(text, func, arg) {\r\n\treturn <button \r\n\t\t\t\t   className=\"header-btn\" \r\n\t\t\t\t   onClick={() => func(arg)}>\r\n\t\t\t\t   {text}\r\n\t\t\t\t </button>\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TrueLogin from './TrueLogin';\r\nimport { FalseLogin } from './FalseLogin';\r\n\r\nimport './header.css';\r\n\r\nfunction Header(props) {\r\n\tlet content = props.email \r\n\t\t? <TrueLogin/> \r\n\t\t: <FalseLogin/>;\r\n\t\t \r\n\treturn (\r\n\t\t<header>\r\n\t\t\t{content}\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nfunction mapStateToProps({currentUser}) {\r\n\treturn currentUser;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { addNotify } from '../../base/reducer/actions';\r\n\r\nimport { toCamelName } from '../../base/utils';\r\n\r\nfunction Chat(props) {\r\n\tconst email = props.currentUser.email;\r\n\r\n\treturn (\r\n\t\t<div \r\n\t\t\tclassName=\"side-menu__item\" \r\n\t\t\tdata-room={toCamelName(props.title)}\r\n\t\t\tonClick={(e) => chatClickHandler(e, email, props) }>\r\n\t\t\t<span className=\"side-menu__title\">{props.title}</span>\r\n\t\t\t{props.svg}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction chatClickHandler(e, email, props) {\r\n\tconst type = e.target.closest('.side-menu__item').dataset.room;\r\n\r\n\tif (!email && \r\n\t\t\tprops.rooms[type].owner === 'site' && \r\n\t\t\tprops.rooms[type].private) {\r\n\t\tprops.onAddNotify({\r\n\t\t\ttext: 'Need to login', \r\n\t\t\ttype: 'danger'\r\n\t\t});\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (props.private && \r\n\t\t\tprops.rooms[type].owner.includes('@') && \r\n\t\t\tprops.rooms[type].owner !== email &&\r\n\t\t\tprops.selectedRoom !== type) {\r\n\t\tcreatePassInput(e, props.rooms, type, props.changeRoom, props.onAddNotify);\r\n\t\treturn;\r\n\t}\r\n\t\t\t\t\r\n\tprops.changeRoom(e.target.closest('.side-menu__item').dataset.room);\r\n}\r\n\r\nfunction createPassInput(e, rooms, type, func, notify) {\r\n\tif (e.target.querySelector('input')) return;\r\n\r\n\tconst input = document.createElement('input');\r\n\tinput.setAttribute('placeholder', 'Enter password');\r\n\r\n\tinput.onblur = () => input.remove();\r\n\tinput.onchange = (ev) => {\r\n\t\tif (ev.target.value === rooms[type].password) {\r\n\t\t\tnotify({text: 'Password is right', type: 'success'});\r\n\t\t\tfunc(type);\r\n\t\t\tinput.remove();\r\n\t\t} else {\r\n\t\t\tnotify({text: 'Password is wrong', type: 'danger'});\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\te.target.append(input);\r\n\tinput.focus();\r\n}\r\n\r\nfunction mapStateToProps({ currentUser, rooms, selectedRoom }) {\r\n\treturn {currentUser, rooms, selectedRoom}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\t return bindActionCreators({\r\n    onAddNotify: addNotify\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { changeRoom } from '../../base/reducer/actions';\r\n\r\nimport Chat from './Chat';\r\n\r\nimport { svgs } from '../../base/constants';\r\n\r\nexport function Chats(props) {\r\n\tconst rooms = getRooms(props);\r\n\r\n\tif (rooms[0] === null && rooms.length <= 2) return null;\r\n\r\n\treturn (\r\n\t\t<div className=\"side-menu__chats\">\r\n\t\t\t<h3 className=\"border-b\">{props.title}</h3>\r\n\t\t\t{rooms}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction getRooms(props) {\r\n\treturn Object.values(props.rooms).map(room => {\r\n\t\tif (room.owner === 'site' && props.ownerIsSite) {\r\n\t\t\treturn createChat(svgs[room.name], room.name, room.private, props.onChangeRoom, room.name);\r\n\r\n\t\t} else if (room.owner !== 'site' &&\r\n\t\t\t\t!props.ownerIsSite) {\r\n\t\t\t\tconst svg = room.password\r\n\t\t\t\t\t? svgs['private room']\r\n\t\t\t\t\t: svgs['open room'];\r\n\r\n\t\t\t\treturn createChat(svg, room.name, room.private, props.onChangeRoom, room.name);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t})\r\n}\r\n\r\nfunction createChat(svg, title, priv, func, key) {\r\n\treturn <Chat \r\n\t\t\t\tsvg={svg} \r\n\t\t\t\ttitle={title}\r\n\t\t\t\tprivate={priv}\r\n\t\t\t\tchangeRoom={func}\r\n\t\t\t\tkey={key}/>\r\n}\r\n\r\nfunction mapStateToProps({rooms}) {\r\n\treturn {rooms};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\t return bindActionCreators({\r\n    onChangeRoom: changeRoom\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chats);","import React, { Component } from 'react';\r\n\r\nimport Chats from './Chats';\r\n\r\nimport './side-menu.css';\r\n\r\nexport class SideMenu extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<aside>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Chats \r\n\t\t\t\t\t\ttitle=\"Common chats\" \r\n\t\t\t\t\t\townerIsSite={true}/>\r\n\t\t\t\t\t<Chats \r\n\t\t\t\t\t\ttitle=\"Users chats\" \r\n\t\t\t\t\t\townerIsSite={false}/>\r\n\t\t\t\t</div>\r\n\t\t\t</aside>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { sendText } from '../../base/reducer/actions';\r\nimport { preventDefault } from '../../base/utils';\r\n\r\nclass MessageInput extends Component  {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttext: ''\r\n\t\t};\r\n\r\n\t\tthis.textInput = React.createRef();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form \r\n\t\t\t\tclassName=\"message-form\" \r\n\t\t\t\tonSubmit={this.formSubmitHandler}>\r\n\t\t\t\t<input \r\n\t\t\t\t\tclassName=\"message-input\" \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={this.state.text} \r\n\t\t\t\t\tref={this.textInput} \r\n\t\t\t\t\tonChange={this.inputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<button className=\"btn-send\"></button>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.focusText();\r\n\t\tthis.scrollToEnd();\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.focusText();\r\n\t\tthis.scrollToEnd();\r\n\t}\r\n\r\n\tscrollToEnd() {\r\n\t\tconst target = document.querySelector('.message-board');\r\n\t\ttarget.scrollTo(0, target.scrollHeight);\r\n\t}\r\n\r\n\tfocusText() {\r\n\t\tthis.textInput.current.focus();\r\n\t}\r\n\r\n\tclearText() {\r\n\t\tthis.setState({text: ''});\r\n\t}\r\n\r\n\tinputHandler = (e) => {\r\n\t\tthis.setState({text: e.target.value})\r\n\t}\r\n\r\n \tformSubmitHandler = (e) => {\r\n\t\tpreventDefault(e);\r\n\r\n\t\tconst text = e.target.querySelector('input').value;\r\n\t\tconst data = {\r\n\t\t\tmessage: {\r\n\t\t\t\tuser: this.props.currentUser.name,\r\n\t\t\t\temail: this.props.currentUser.email,\r\n\t\t\t\ttext\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (this.props.currentUser.email === null) {\r\n\t\t\tdata.message.user += this.props.sessionId\r\n\t\t}\r\n\r\n\t\tthis.props.onSendText(data);\r\n\t\tthis.clearText();\r\n\t\tthis.focusText();\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps({currentUser, sessionId, selectedRoom}) {\r\n\treturn {currentUser, sessionId, selectedRoom};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\t return bindActionCreators({\r\n    onSendText: sendText\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageInput);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nexport function MessageItem(props) {\r\n\tconst { user, date, text } = props.info;\r\n\tconst clas = getClass(props);\r\n\r\n\treturn (\r\n\t\t<div className={clas}>\r\n\t\t\t<div className=\"message-info\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"message-avatar\">{user[0]}</span>\r\n\t\t\t\t\t<span className=\"message-nickname\">{user}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span className=\"message-date\">{date}</span>\r\n\t\t\t</div>\r\n\t\t\t<p className=\"message-text\">\r\n\t\t\t\t{text}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction getClass({sessionId, currentUser, info: { email, user }}) {\r\n\tlet clas = currentUser.email === email && email !== null\r\n\t\t? \"message-item you\" \r\n\t\t: \"message-item\";\r\n\r\n\tif (email === null && \r\n\t\t\tcurrentUser.name + sessionId === user) {\r\n\t\tclas += ' you';\r\n\t}\r\n\r\n\treturn clas;\r\n}\r\n\r\nfunction mapStateToProps({ currentUser, sessionId }) {\r\n\treturn {currentUser, sessionId}\r\n}\r\n\r\nexport default connect(mapStateToProps)(MessageItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport MessageItem from './MessageItem';\r\n\r\nfunction MessageBoard(props) {\r\n\tconst selectedRoom = props.selectedRoom;\r\n\tconst messages = props.rooms[selectedRoom].messages;\r\n\r\n\treturn (\r\n\t\t<div className=\"message-board\">\r\n\t\t\t{renderMessages(messages)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction renderMessages(messages) {\r\n\treturn messages.length\r\n\t\t\t   ? messages.map(mapMessages)\r\n\t\t\t   : null\r\n}\r\n\r\nfunction mapMessages(message) {\r\n\treturn <MessageItem \r\n\t\tinfo={message}\r\n\t\tkey={message.timestamp + message.user + message.email} />\r\n}\r\n\r\nconst mapStateToProps = ({selectedRoom, rooms}) => {\r\n  return {selectedRoom, rooms};\r\n};\r\n\r\nexport default connect(mapStateToProps)(MessageBoard);","import React from 'react';\r\n\r\nimport { svgs } from '../../base/constants';\r\n\r\nexport function MainWall() {\r\n\treturn (\r\n\t\t<div className=\"message-backdrop\">\r\n\t\t\t{svgs.conversationImage}\r\n\t\t\t<p className=\"message-backdrop__text\">Select some room to begin the conversation!</p>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport MessageInput from './MessageInput';\r\nimport MessageBoard from './MessageBoard';\r\nimport { MainWall } from './MainWall';\r\n\r\nimport './main-area.css';\r\n\r\nfunction MainArea(props) {\r\n\tconst content = showComponent(props.selectedRoom);\r\n\r\n  return (\r\n    <main>\r\n    \t<p className='room-title'>{props.selectedRoom}</p>\r\n\t\t\t{content}\t\r\n\t\t</main>\r\n  )\r\n}\r\n\r\nfunction showComponent(option) {\r\n\tif (option) {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<MessageBoard/>\r\n\t\t\t\t<MessageInput/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else {\r\n\t\treturn <MainWall/>\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps({selectedRoom}) {\r\n\treturn { selectedRoom };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainArea)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { deleteNotify } from '../../base/reducer/actions';\r\nimport { timeTillRemove } from '../../base/constants';\r\n\r\nimport './notificator.css';\r\n\r\nfunction Notificator(props) {\r\n  if (props.messages.length < 1) return <div></div>\r\n  \t\r\n  removeMessage(props.onDeleteNotify, props.time);\r\n\r\n  return (\r\n  \t<div className=\"notificator\">\r\n  \t\t{props.messages.map(createMessage)}\r\n  \t</div>\r\n  )\r\n}\r\n\r\nfunction createMessage(message) {\r\n\tconst clas = `notificator-message ${message.type}`;\r\n\treturn <div key={message.time} className={clas}>{message.text}</div>\r\n}\r\n\r\nfunction removeMessage(func, time) {\r\n\tsetTimeout(() => func(time), timeTillRemove);\r\n}\r\n\r\nfunction mapStateToProps({notificator}) {\r\n\treturn notificator;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\t return bindActionCreators({\r\n    onDeleteNotify: deleteNotify\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notificator);","import React from 'react';\r\n\r\nimport { Toggler } from './toggler/Toggler';\r\nimport Header from './header/Header';\r\nimport { SideMenu } from './side-menu/SideMenu';\r\nimport MainArea from './main-area/MainArea';\r\nimport Notificator from './notificator/Notificator';\r\n\r\nimport './app.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app-container'>\r\n    \t<Toggler/>\r\n\t\t\t<Header/>\r\n\t\t\t<SideMenu/>\r\n\t\t\t<MainArea/>\r\n\t\t\t<Notificator/>\r\n\t\t</div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport { svgs } from '../../base/constants';\r\n\r\nimport './error-message.css';\r\n\r\nexport function ErrorMessage() {\r\n\treturn (\r\n\t\t<div className='error-message'>\r\n\t\t\t<h1>Something went wrong</h1>\r\n\t\t\t{svgs.sad}\r\n\t\t</div>\r\n\t)\r\n}","import React, { Component } from 'react';\r\n\r\nimport { ErrorMessage } from '../error-message/ErrorMessage';\r\n\r\nexport class ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tisError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch() {\r\n\t\tthis.setState({isError: true})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isError) {\r\n\t\t\treturn <ErrorMessage />\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}","export function storage(key, data) {\r\n\tif (!data) {\r\n\t\treturn JSON.parse(localStorage.getItem(key));\r\n\t}\r\n\r\n\tlocalStorage.setItem(key, JSON.stringify(data));\r\n}","const currentUserDefault = {\r\n  name: 'Guest',\r\n  email: null,\r\n};\r\nconst roomDefault = {\r\n  messages: [],\r\n  private: false,\r\n  owner: 'site'\r\n};\r\n\r\nconst defaultState = {\r\n  'sessionId': Date.now(),\r\n  'selectedRoom': null,\r\n  'currentUser': {\r\n    ...currentUserDefault\r\n  },\r\n  'rooms': {\r\n    'OpenRoom': {\r\n      ...roomDefault,\r\n      name: 'open room'\r\n    },\r\n    'PrivateRoom': {\r\n      ...roomDefault,\r\n      name: 'private room',\r\n      private: true\r\n    } \r\n  },\r\n  'users': {}, \r\n  'notificator': {\r\n    'text': '', \r\n    'type': '',\r\n    'messages': []\r\n  }\r\n};\r\n\r\nfunction normalize(state) {\r\n  return { \r\n    ...defaultState, \r\n    ...state, \r\n    selectedRoom: null,\r\n    currentUser: currentUserDefault,\r\n    sessionId: Date.now(),\r\n    notificator: {\r\n      text: '',\r\n      type: '',\r\n      time: '',\r\n      messages: []\r\n    } \r\n  }\r\n}\r\n\r\nexport function normalizeInitialState(state) {\r\n  return state ? normalize(state) : JSON.parse(JSON.stringify(defaultState));\r\n}","import { createStore } from 'redux';\r\n\r\nimport { reducer } from './reducer/reducer';\r\nimport { storage } from './clients/storage';\r\n\r\nimport { normalizeInitialState } from './reducer/initialState';\r\n\r\n\r\nexport const store = createStore(reducer, normalizeInitialState(storage('chatty')));","import {\r\n  SEND_TEXT,\r\n  CHANGE_ROOM,\r\n  REGISTER,\r\n  LOGIN,\r\n  LOGOUT,\r\n  CREATE_ROOM,\r\n  DELETE_ROOM,\r\n  DELETE_NOTIFICATOR,\r\n  ADD_NOTIFICATOR\r\n} from './types';\r\n\r\nexport function reducer(state, action) {\r\n  switch (action.type) {\r\n\r\n    case SEND_TEXT:\r\n      return sendTextReducer(state, action);\r\n\r\n    case REGISTER:\r\n      return registerReducer(state, action);\r\n\r\n    case LOGIN:\r\n      return loginReducer(state, action);\r\n\r\n    case LOGOUT:\r\n      return logoutReducer(state, action);\r\n\r\n    case CREATE_ROOM:\r\n      return createRoomReducer(state, action);\r\n\r\n    case DELETE_ROOM:\r\n      return deleteRoomReducer(state, action);\r\n\r\n    case CHANGE_ROOM:\r\n      return changeRoomReducer(state, action);\r\n\r\n    case DELETE_NOTIFICATOR:\r\n      return deleteNotificatorReducer(state, action);\r\n\r\n    case ADD_NOTIFICATOR:\r\n      return addNotificatorReducer(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nfunction sendTextReducer(state, action) {\r\n  const { message, date, timestamp } = action.data;\r\n  const room = state.selectedRoom;\r\n  const changeRoom = state.rooms[room];\r\n  let messages = [];\r\n\r\n  if (state) {\r\n    messages = [...changeRoom.messages];\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    rooms: {\r\n      ...state.rooms,\r\n      [room]: {\r\n        ...state.rooms[room],\r\n        messages: [...messages, { ...message, date, timestamp }]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction registerReducer(state, action) {\r\n  const email = action.data.email;\r\n  const usersArr = Object.keys(state.users);\r\n\r\n  if (!action.data.name ||\r\n    !action.data.email ||\r\n    !action.data.password ||\r\n    usersArr.includes(action.data.email)) {\r\n    return {\r\n      ...state,\r\n      notificator: {\r\n        time: action.data.time,\r\n        messages: [\r\n          ...state.notificator.messages,\r\n          {\r\n            text: 'Something went wrong',\r\n            type: 'danger',\r\n            time: action.data.time\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    users: {\r\n      ...state.users,\r\n      [email]: {\r\n        name: action.data.name,\r\n        password: action.data.password,\r\n      }\r\n    },\r\n    notificator: {\r\n      time: action.data.time,\r\n      messages: [\r\n        ...state.notificator.messages,\r\n        {\r\n          text: 'You successufully created account!',\r\n          type: 'success',\r\n          time: action.data.time\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction loginReducer(state, action) {\r\n  const email = action.data.email;\r\n  const password = action.data.password;\r\n\r\n  if (state.users[email] &&\r\n    state.users[email].password === password) {\r\n    return {\r\n      ...state,\r\n      currentUser: {\r\n        name: state.users[email].name,\r\n        email\r\n      },\r\n      notificator: {\r\n        time: action.data.time,\r\n        messages: [\r\n          ...state.notificator.messages,\r\n          {\r\n            text: 'Welcome!',\r\n            type: 'success',\r\n            time: action.data.time\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    ...state,\r\n    notificator: {\r\n      time: action.data.time,\r\n      messages: [\r\n        ...state.notificator.messages,\r\n        {\r\n          text: 'Log In is failed!',\r\n          type: 'danger',\r\n          time: action.data.time\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction logoutReducer(state, action) {\r\n  return {\r\n    ...state,\r\n    currentUser: {\r\n      name: 'Guest',\r\n      email: null\r\n    },\r\n    selectedRoom: null,\r\n    notificator: {\r\n      time: action.data.time,\r\n      messages: [\r\n        ...state.notificator.messages,\r\n        {\r\n          text: 'Goodbye!',\r\n          type: 'success',\r\n          time: action.data.time\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction createRoomReducer(state, action) {\r\n  if (state.rooms[action.data.key]) {\r\n    return {\r\n      ...state,\r\n      notificator: {\r\n        time: action.data.time,\r\n        messages: [\r\n          ...state.notificator.messages,\r\n          {\r\n            text: 'The chat room is existing!',\r\n            type: 'warning',\r\n            time: action.data.time\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  let priv = Boolean(action.data.password);\r\n\r\n  return {\r\n    ...state,\r\n    rooms: {\r\n      ...state.rooms,\r\n      [action.data.key]: {\r\n        messages: [],\r\n        owner: state.currentUser.email,\r\n        name: action.data.value,\r\n        password: action.data.password,\r\n        private: priv\r\n      }\r\n    },\r\n    notificator: {\r\n      time: action.data.time,\r\n      messages: [\r\n        ...state.notificator.messages,\r\n        {\r\n          text: 'You created new chat room!',\r\n          type: 'success',\r\n          time: action.data.time\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteRoomReducer(state, action) {\r\n  const newState = { ...state };\r\n  delete newState.rooms[action.data];\r\n\r\n  return {\r\n    ...state,\r\n    selectedRoom: null,\r\n    rooms: { ...newState.rooms },\r\n    notificator: {\r\n      time: action.time,\r\n      messages: [\r\n        ...state.notificator.messages,\r\n        {\r\n          text: 'You deleted chat room!',\r\n          type: 'danger',\r\n          time: action.time\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeRoomReducer(state, action) {\r\n  return { ...state, selectedRoom: action.data }\r\n}\r\n\r\nfunction deleteNotificatorReducer(state, action) {\r\n  const newNotiMessages = state.notificator.messages\r\n    .filter(message => message.time !== action.data);\r\n  return {\r\n    ...state,\r\n    notificator: {\r\n      time: '',\r\n      messages: [...newNotiMessages]\r\n    }\r\n  }\r\n}\r\n\r\nfunction addNotificatorReducer(state, action) {\r\n  return {\r\n    ...state,\r\n    notificator: {\r\n      time: action.data.time,\r\n      messages: [\r\n        ...state.notificator.messages,\r\n        {\r\n          text: action.data.text,\r\n          type: action.data.type,\r\n          time: action.data.time\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\n\nimport { store } from './base/store';\nimport { LocalStorageClient } from './base/clients/LocalStorageClient';\n\nimport './index.css';\n\nconst lcc = new LocalStorageClient('chatty');\n\nstore.subscribe(() => {\n\tlcc.save(store.getState());\n});\nstore.dispatch({type: '__INIT__'});\n\nReactDom.render(\n\t<Provider store={store}>\n\t\t<ErrorBoundary>\n\t\t\t<App/>\n\t\t</ErrorBoundary>\n\t</Provider>,\n\tdocument.querySelector('#root')\n)","import { storage } from './storage';\r\n\r\nexport class LocalStorageClient {\r\n\tconstructor(name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tsave = (state) => {\r\n\t\tstorage(this.name, state);\r\n\t}\r\n\r\n\tget = () => {\r\n\t\treturn storage(this.name);\r\n\t}\r\n}"],"sourceRoot":""}